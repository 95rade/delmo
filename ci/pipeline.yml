---
groups:
- name: delmo
  jobs: [test-master, test-all, run-examples, rc, shipit, minor, major, bump-patch]
- name: images
  jobs: [build-task-image, build-docker-machine-setup]
- name: docker-machine
  jobs: [provision-docker-host]

jobs:
- name: minor
  public: true
  plan:
    - { get: version, trigger: false, params: {bump: minor} }
    - { put: version,                 params: {file: version/number} }

- name: major
  public: true
  plan:
    - { get: version, trigger: false, params: {bump: major} }
    - { put: version,                 params: {file: version/number} }

- name: bump-patch
  public: true
  plan:
    - { get: delmo,   trigger: true,  passed: [shipit] }
    - { get: version, trigger: true, params: {bump: patch}, passed: [shipit] }
    - { put: version,                params: {file: version/number} }

- name: rc
  public: true
  plan:
    - aggregate:
        - { get: delmo,   trigger: true,  passed: [run-examples] }
        - { get: version, trigger: false, params: {pre: rc} }
    - { put: version, params: {file: version/number} }

- name: shipit
  public: true
  serial: true
  plan:
  - aggregate:
      - { get: version, passed: [rc], params: {bump: final} }
      - { get: delmo,     passed: [rc] }
      - { get: delmo-ci}
  - task: release
    file: delmo-ci/ci/tasks/shipit.yml
  - aggregate:
    - put: version
      params: { bump: final }
    - put: delmo
      params:
        rebase: true
        repository: delmo-out/git
    - do:
      - put: delmo-release
        params:
          name:   release/name
          tag:    release/tag
          body:   release/notes.md
          globs: [release/artifacts/*]
      - put: delmo-concourse-image
        params:
          build: delmo-out/git/images/delmo-concourse
          tag: version/number
          tag_as_latest: true


- name: test-master
  plan:
  - aggregate:
    - {get: delmo, trigger: true}
    - get: delmo-ci
  - task: run-tests
    file: delmo-ci/ci/tasks/run-tests.yml

- name: test-all
  plan:
  - aggregate:
    - {get: delmo-all, trigger: true}
  - task: run-tests-all
    file: delmo-all/ci/tasks/run-tests-all.yml

- name: run-examples
  serial: true
  plan:
  - get: delmo-ci
  - {get: delmo, trigger: true, passed: [test-master]}
  - task: run-examples
    file: delmo-ci/ci/tasks/run-examples.yml
    params:
      AWS_ACCESS_KEY_ID: {{aws_access_key_id}}
      AWS_SECRET_ACCESS_KEY: {{aws_secret_access_key}}
      AWS_REGION: {{aws_region}}
      AWS_BUCKET: {{aws_bucket}}

- name: provision-docker-host
  serial: true
  plan:
  - get: delmo-ci
  - task: provision-docker-host
    file: delmo-ci/ci/tasks/provision-docker-host.yml
    params:
      AWS_ACCESS_KEY_ID: {{aws_access_key_id}}
      AWS_SECRET_ACCESS_KEY: {{aws_secret_access_key}}
      AWS_DEFAULT_REGION: {{aws_region}}
      AWS_BUCKET: {{aws_bucket}}

- name: build-task-image
  serial: true
  plan:
    - {get: pipeline-ci-image, trigger: true}
    - put: docker-image-ci
      params:
        build: pipeline-ci-image/ci/ci_image

- name: build-docker-machine-setup
  serial: true
  plan:
    - {get: docker-machine-setup, trigger: true}
    - put: docker-machine-setup-image
      params:
        build: docker-machine-setup/images/docker-machine-setup

resources:

- name: delmo-ci
  type: git
  source:
    uri: https://github.com/bodymindarts/delmo
    branch: {{pipeline-branch}}

- name: delmo
  type: git
  source:
    uri: git@github.com:bodymindarts/delmo.git
    branch: {{pipeline-branch}}
    private_key: {{github-key}}

- name: delmo-all
  type: git-multibranch
  source:
    uri: https://github.com/bodymindarts/delmo
    branches: '.*'
    ignore_branches: 'master'

- name: pipeline-ci-image
  type: git
  source:
    uri: https://github.com/bodymindarts/delmo
    branch: {{pipeline-branch}}
    paths: [ci/ci_image/*]

- name: docker-image-ci
  type: docker-image
  source:
    email: {{docker-hub-email}}
    username: {{docker-hub-username}}
    password: {{docker-hub-password}}
    repository: bodymindarts/delmo-pipeline

- name: docker-machine-setup
  type: git
  source:
    uri: https://github.com/bodymindarts/delmo
    branch: {{pipeline-branch}}
    private_key: {{github-key}}
    paths: [images/docker-machine-setup/*]

- name: delmo-release
  type: github-release
  source:
    user:         {{github-user}}
    repository:   delmo
    access_token: {{github-token}}

- name: docker-machine-setup-image
  type: docker-image
  source:
    email: {{docker-hub-email}}
    username: {{docker-hub-username}}
    password: {{docker-hub-password}}
    repository: bodymindarts/docker-machine-setup

- name: delmo-concourse-image
  type: docker-image
  source:
      email: {{docker-hub-email}}
      username: {{docker-hub-username}}
      password: {{docker-hub-password}}
      repository: bodymindarts/delmo-concourse


- name: version
  type: semver
  source:
    driver: s3
    bucket: {{version-bucket}}
    key: version
    access_key_id: {{aws_access_key_id}}
    secret_access_key: {{aws_secret_access_key}}
    region_name: {{aws_region}}
    initial_version: "0.0.2"

resource_types:
- name: git-multibranch
  type: docker-image
  source:
    repository: cfcommunity/git-multibranch-resource
